{"version":3,"file":"static/js/573.69f5dbd6.chunk.js","mappings":"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","sources":["DemoPages/Users/user-list.js","DemoPages/Users/index.js","Layout/AppMain/PageTitleExamples/Variation1.js","Layout/AppMain/PageTitleExamples/Variation2.js","Layout/AppMain/PageTitle.js","Layout/AppMain/PageTitleExamples/Variation3.js","Services/user.js","utils.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Table } from \"reactstrap\";\n// Users.js\nimport { fetchData } from '../../Services/user';\nimport ReactPaginate from 'react-paginate';\nimport * as Ionicons from \"react-icons/io\";\nimport { Link } from 'react-router-dom';\nimport { formatDateUtils } from \"../../utils\";\n\n\nconst Users = () => {\n    const [paginationProps, setPaginationProps] = useState({\n        page: 1, limit: 5\n    })\n\n    const [data, setData] = useState([]);\n    const [totalResults, setTotalResults] = useState(0);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const pageCount = Math.ceil(totalResults / paginationProps.limit);\n    const IconName = Ionicons[\"IoIosEye\"]\n\n    const handleClick = (params) => {\n        setPaginationProps(prev => ({ ...prev, page: params.selected + 1 }))\n    };\n    const onChangelimit = (e) => {\n        setPaginationProps(prev => ({ ...prev, limit: Number(e.target.value) }))\n    }\n    const divStyle = {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        margin: '0 1rem',\n        alignItems: 'center'\n    };\n\n    const divPageSizeStyle = {\n        display: 'flex',\n        width: '8rem',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    }\n\n    useEffect(() => {\n        const fetchDataFromAPI = async () => {\n            try {\n                const authToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjgsImlhdCI6MTcxMTY4NjkwMCwiZXhwIjoxNzExNjg4NzAwLCJ0eXBlIjoiQUNDRVNTIn0.zlxkFbOBz4MSroNrkhMVFJ1dOh3W9tVTA-5asNDwk70';\n                const responseData = await fetchData('users', authToken, {\n                    sortType: 'asc',\n                    limit: paginationProps.limit,\n                    page: paginationProps.page\n                });\n                setData(responseData.results);\n                setTotalResults(responseData.totalResults)\n            } catch (error) {\n                setError(error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchDataFromAPI();\n    }, [paginationProps]);\n\n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>Error: {error.message}</div>;\n\n    return (\n        <div className=\"card\" style={{ height: '100%' }} >\n            <div className=\"card-body\">\n                <div class=\"card-title\">Users</div>\n                <Table striped className=\"mb-0\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Email</th>\n                            <th>Name</th>\n                            <th>Role</th>\n                            <th>Created At</th>\n                            <th>Updated At</th>\n                            <th>Detail</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map(result => (\n                            <tr key={result.id}>\n                                <td>{result.id}</td>\n                                <td>{result.email}</td>\n                                <td>{result.name}</td>\n                                <td>{result.role}</td>\n\n                                <td>{formatDateUtils(result.createdAt)}</td>\n                                <td>{formatDateUtils(result.updatedAt)}</td>\n                                <td>\n                                    <Link to={`/user/${result.id}`} title=\"See details\">\n                                        <IconName fontSize=\"35px\" color=\"#333\" />\n                                    </Link>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n\n                </Table>\n\n            </div>\n\n            <div style={divStyle}>\n                <ReactPaginate\n                    previousLabel={'Previous'}\n                    nextLabel={'Next'}\n                    pageCount={pageCount}\n                    onPageChange={handleClick}\n                    containerClassName={'pagination'}\n                    activeClassName={'active'}\n                    initialPage={paginationProps.page - 1}\n                />\n                <div style={divPageSizeStyle}>\n                    <label>Page size</label>\n                    <select style={{ height: '1.5rem', width: '3rem' }} value={paginationProps.limit} onChange={onChangelimit}>\n                        <option value={5}>5</option>\n                        <option value={8}>8</option>\n                        <option value={10}>10</option>\n                    </select>\n                </div>\n\n            </div>\n\n        </div>\n\n\n    );\n};\n\nexport default Users;\n\n\n","import React, { Fragment } from \"react\";\nimport { Route } from \"react-router-dom\";\n\n// Layout\n\nimport AppHeader from \"../../Layout/AppHeader/\";\nimport AppSidebar from \"../../Layout/AppSidebar/\";\nimport AppFooter from \"../../Layout/AppFooter/\";\nimport UsersList from \"./user-list\";\nimport PageTitle from '../../Layout/AppMain/PageTitle';\n\n\nconst Users = ({ match }) => (\n    <Fragment>\n        <AppHeader />\n        <div className=\"app-main\">\n            <AppSidebar />\n            <div className=\"app-main__outer\">\n                <UsersList></UsersList>\n                <div className=\"app-wrapper-footer\">\n                    <AppFooter />\n                </div>\n            </div>\n        </div>\n    </Fragment>\n);\n\nexport default Users;\n","import React, { Component, Fragment } from \"react\";\n\nimport { Button, UncontrolledTooltip } from \"reactstrap\";\n\nimport { toast, Slide } from \"react-toastify\";\n\nimport { faBatteryThreeQuarters } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default class TitleComponent1 extends Component {\n  state = {\n    expZoomIn: false,\n  };\n\n  toggle(name) {\n    this.setState({\n      [name]: !this.state[name],\n      progress: 0.5,\n    });\n  }\n\n  notify22 = () =>\n    (this.toastId = toast(\"You can add whatever element in this section.\", {\n      transition: Slide,\n      closeButton: true,\n      autoClose: 5000,\n      position: \"bottom-center\",\n      type: \"default\",\n    }));\n\n  render() {\n    return (\n      <Fragment>\n        <Button className=\"btn-pill btn-shadow me-3\" onClick={this.notify22} color=\"info\" id=\"Tooltip-123\">\n          <FontAwesomeIcon icon={faBatteryThreeQuarters} />\n        </Button>\n        <UncontrolledTooltip placement=\"left\" target={\"Tooltip-123\"}>\n          Show a Toastify notification example!\n        </UncontrolledTooltip>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n  UncontrolledTooltip,\n} from \"reactstrap\";\n\nimport { faStar, faBusinessTime } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { toast, Slide } from \"react-toastify\";\n\nexport default class TitleComponent2 extends Component {\n  toggle(name) {\n    this.setState({\n      [name]: !this.state[name],\n      progress: 0.5,\n    });\n  }\n\n  notify22 = () =>\n    (this.toastId = toast(\"Another toastify example!!!\", {\n      transition: Slide,\n      closeButton: true,\n      autoClose: 5000,\n      position: \"bottom-center\",\n      type: \"success\",\n    }));\n\n  render() {\n    return (\n      <Fragment>\n        <Button className=\"btn-shadow me-3\" onClick={this.notify22} color=\"dark\" id=\"Tooltip-123\">\n          <FontAwesomeIcon icon={faStar} />\n        </Button>\n        <UncontrolledTooltip placement=\"left\" target={\"Tooltip-123\"}>\n          Show a Toastify notification example!\n        </UncontrolledTooltip>\n        <UncontrolledDropdown className=\"d-inline-block\">\n          <DropdownToggle color=\"info\" className=\"btn-shadow\" caret>\n            <span className=\"btn-icon-wrapper pe-2 opacity-7\">\n              <FontAwesomeIcon icon={faBusinessTime} />\n            </span>\n            Buttons\n          </DropdownToggle>\n          <DropdownMenu end>\n            <Nav vertical>\n              <NavItem>\n                <NavLink href=\"#\">\n                  <i className=\"nav-link-icon lnr-inbox\"> </i>\n                  <span>Inbox</span>\n                  <div className=\"ms-auto badge rounded-pill bg-secondary\">\n                    86\n                  </div>\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#\">\n                  <i className=\"nav-link-icon lnr-book\"> </i>\n                  <span>Book</span>\n                  <div className=\"ms-auto badge rounded-pill bg-danger\">5</div>\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#\">\n                  <i className=\"nav-link-icon lnr-picture\"> </i>\n                  <span>Picture</span>\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink disabled href=\"#\">\n                  <i className=\"nav-link-icon lnr-file-empty\"> </i>\n                  <span>File Disabled</span>\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport cx from \"classnames\";\n\nimport TitleComponent1 from \"./PageTitleExamples/Variation1\";\nimport TitleComponent2 from \"./PageTitleExamples/Variation2\";\nimport TitleComponent3 from \"./PageTitleExamples/Variation3\";\n\nclass PageTitle extends Component {\n  randomize(myArray) {\n    return myArray[Math.floor(Math.random() * myArray.length)];\n  }\n\n  render() {\n    let {\n      enablePageTitleIcon,\n      enablePageTitleSubheading,\n\n      heading,\n      icon,\n      subheading,\n    } = this.props;\n\n    var arr = [<TitleComponent1 />, <TitleComponent2 />, <TitleComponent3 />];\n\n    return (\n      <div className=\"app-page-title\">\n        <div className=\"page-title-wrapper\">\n          <div className=\"page-title-heading\">\n            <div>\n              {heading}\n              <div className={cx(\"page-title-subheading\", {\n                \"d-none\": !enablePageTitleSubheading,\n              })}>\n                {subheading}\n              </div>\n            </div>\n          </div>\n          {/* <div className=\"page-title-actions\">{this.randomize(arr)}</div> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  enablePageTitleIcon: state.ThemeOptions.enablePageTitleIcon,\n  enablePageTitleSubheading: state.ThemeOptions.enablePageTitleSubheading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageTitle);\n","import React, { Component, Fragment } from \"react\";\n\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default class TitleComponent3 extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <a href=\"https://colorlib.com/\" onClick={(e) => e.preventDefault()}>\n              <FontAwesomeIcon icon={faHome} />\n            </a>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <a href=\"https://colorlib.com/\" onClick={(e) => e.preventDefault()}>\n              Dashboards\n            </a>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Example Breadcrumb</BreadcrumbItem>\n        </Breadcrumb>\n      </Fragment>\n    );\n  }\n}\n","// apiService.js\nconst BASE_URL = 'http://14.225.211.111:3000/v1';\n\nasync function fetchData(endpoint, authToken, params = {}) {\n    const url = new URL(`${BASE_URL}/${endpoint}`);\n    // Retrieve the value from local storage using the key\n    const storedValue = localStorage.getItem('user');\n    authToken = '';\n    let user = null\n\n    // Check if the value is present\n    if (storedValue !== null) {\n        // Value found in local storage, do something with it\n        // Parse the JSON string back to an object\n        user = JSON.parse(storedValue)\n        console.log(user.tokens.access.token)\n        authToken = user.tokens.access.token;\n    } else {\n        // Value not found in local storage\n        console.log('Value not found in local storage');\n    }\n    console.log(authToken)\n    // Add query parameters\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n\n    const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n            'Authorization': `Bearer ${authToken}`, // Include the authorization token in the header\n            'Content-Type': 'application/json', // Example of adding a Content-Type header\n        },\n    });\n\n    console.log(response)\n\n    if (!response.ok) {\n        throw new Error('Network response was not ok');\n    }\n    try {\n        const jsonData = await response.json(); // Read the response body once\n        console.log(jsonData)\n        return jsonData;\n    } catch (error) {\n        throw new Error('Failed to parse response JSON');\n    }\n}\n\nasync function getDetail(endpoint, authToken, id) {\n    const url = new URL(`${BASE_URL}/${endpoint}/${id}`);\n    // Retrieve the value from local storage using the key\n    const storedValue = localStorage.getItem('user');\n    authToken = '';\n    let user = null\n\n    // Check if the value is present\n    if (storedValue !== null) {\n        // Value found in local storage, do something with it\n        // Parse the JSON string back to an object\n        user = JSON.parse(storedValue)\n        authToken = user.tokens.access.token;\n    } else {\n        // Value not found in local storage\n        console.log('Value not found in local storage');\n    }\n\n    console.log(authToken)\n    // Add query parameters\n\n    const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n            'Authorization': `Bearer ${authToken}`, // Include the authorization token in the header\n            'Content-Type': 'application/json', // Example of adding a Content-Type header\n        },\n    });\n\n    console.log(response)\n\n    if (!response.ok) {\n        throw new Error('Network response was not ok');\n    }\n    try {\n        const jsonData = await response.json(); // Read the response body once\n        console.log(jsonData)\n        return jsonData;\n    } catch (error) {\n        throw new Error('Failed to parse response JSON');\n    }\n}\n\nexport { fetchData, getDetail };\n","function formatDateUtils(dateString) {\n    const date = new Date(dateString);\n    if (isNaN(date.getTime())) {\n        return 'Invalid Date'; // Return a default value if the provided string is not a valid date\n    }\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Adding 1 because months are zero-based\n    const year = date.getFullYear();\n    return `${hours}:${minutes} ${day}-${month}-${year}`;\n}\n\nexport { formatDateUtils }"],"names":["_useState","useState","page","limit","_useState2","_slicedToArray","paginationProps","setPaginationProps","_useState3","_useState4","data","setData","_useState5","_useState6","totalResults","setTotalResults","_useState7","_useState8","loading","setLoading","_useState9","_useState10","error","setError","pageCount","Math","ceil","IconName","Ionicons","useEffect","fetchDataFromAPI","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","wrap","_context","prev","next","fetchData","sortType","sent","results","t0","finish","stop","apply","arguments","_jsx","children","_jsxs","message","className","style","height","class","Table","striped","map","result","id","email","name","role","formatDateUtils","createdAt","updatedAt","Link","to","concat","title","fontSize","color","display","flexDirection","justifyContent","margin","alignItems","ReactPaginate","previousLabel","nextLabel","onPageChange","params","_objectSpread","selected","containerClassName","activeClassName","initialPage","width","value","onChange","e","Number","target","match","Fragment","AppHeader","AppSidebar","UsersList","AppFooter","Component","PageTitle","_Component","_inherits","_super","_createSuper","_classCallCheck","_createClass","key","myArray","floor","random","length","_this$props","this","props","enablePageTitleSubheading","enablePageTitleIcon","heading","subheading","icon","cx","connect","state","ThemeOptions","dispatch","BASE_URL","_x","_x2","_fetchData","endpoint","authToken","url","storedValue","user","response","jsonData","_args","undefined","URL","localStorage","getItem","JSON","parse","console","log","tokens","access","token","Object","keys","forEach","searchParams","append","fetch","method","headers","ok","Error","json","abrupt","getDetail","_x3","_x4","_x5","_getDetail","_callee2","_context2","dateString","date","Date","isNaN","getTime","hours","String","getHours","padStart","minutes","getMinutes","day","getDate","month","getMonth","year","getFullYear"],"sourceRoot":""}