{"version":3,"file":"static/js/958.d7dc891f.chunk.js","mappings":"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","sources":["DemoPages/Charts/Sparklines1/Examples/index.js","DemoPages/Charts/Sparklines1/index.js","DemoPages/Charts/Sparklines2/Examples/index.js","DemoPages/Charts/Sparklines2/index.js","DemoPages/Charts/ChartJs/Examples/doughnut.js","DemoPages/Charts/ChartJs/Examples/pie.js","DemoPages/Charts/ChartJs/Examples/dynamicDoughnut.js","DemoPages/Charts/ChartJs/Examples/radar.js","DemoPages/Charts/ChartJs/Examples/polar.js","DemoPages/Charts/ChartJs/Examples/Circular/index.js","DemoPages/Charts/ChartJs/Examples/line.js","DemoPages/Charts/ChartJs/Examples/line2.js","DemoPages/Charts/ChartJs/Examples/bar.js","DemoPages/Charts/ChartJs/Examples/horizontalBar.js","DemoPages/Charts/ChartJs/Examples/mix.js","DemoPages/Charts/ChartJs/Examples/LinesBars/index.js","DemoPages/Charts/ChartJs/index.js","DemoPages/Charts/Gauges/Examples/liquidGauge.js","DemoPages/Charts/Gauges/index.js","DemoPages/Charts/ApexCharts/Examples/Basic/Area.jsx","DemoPages/Charts/ApexCharts/Examples/Basic/Bar.jsx","DemoPages/Charts/ApexCharts/Examples/Basic/Donut.jsx","DemoPages/Charts/ApexCharts/Examples/Basic/RadialBar.jsx","DemoPages/Charts/ApexCharts/Examples/Basic/index.js","DemoPages/Charts/ApexCharts/Examples/Sparklines/Area.jsx","DemoPages/Charts/ApexCharts/Examples/Sparklines/Bar.jsx","DemoPages/Charts/ApexCharts/Examples/Sparklines/Line.jsx","DemoPages/Charts/ApexCharts/Examples/Sparklines/index.js","DemoPages/Charts/ApexCharts/index.js","DemoPages/Charts/index.js","Layout/AppMain/PageTitleExamples/Variation1.js","Layout/AppMain/PageTitleExamples/Variation2.js","Layout/AppMain/PageTitle.js","Layout/AppMain/PageTitleExamples/Variation3.js"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Row, Col, Card, CardBody, CardTitle } from \"reactstrap\";\n\nimport {\n  Sparklines,\n  SparklinesBars,\n  SparklinesLine,\n  SparklinesCurve,\n  SparklinesReferenceLine,\n  SparklinesSpots,\n} from \"react-sparklines\";\n\nfunction boxMullerRandom() {\n  let phase = true,\n    x1,\n    x2,\n    w;\n\n  return (function() {\n    if (phase) {\n      do {\n        x1 = 2.0 * Math.random() - 1.0;\n        x2 = 2.0 * Math.random() - 1.0;\n        w = x1 * x1 + x2 * x2;\n      } while (w >= 1.0);\n\n      w = Math.sqrt((-2.0 * Math.log(w)) / w);\n      return x1 * w;\n    } else {\n      return x2 * w;\n    }\n  })();\n}\n\nfunction randomData(n = 30) {\n  return Array.apply(0, Array(n)).map(boxMullerRandom);\n}\n\nconst sampleData = randomData(30);\nconst sampleData1 = randomData(39);\nconst sampleData2 = randomData(19);\nconst sampleData3 = randomData(43);\nconst sampleData4 = randomData(13);\nconst sampleData5 = randomData(17);\nconst sampleData6 = randomData(24);\nconst sampleData7 = randomData(35);\nconst sampleData100 = randomData(100);\n\nclass ChartsSparklines1 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { data: [] };\n    setInterval(\n      () =>\n        this.setState({\n          data: this.state.data.concat([boxMullerRandom()]),\n        }),\n      200\n    );\n  }\n  componeDidMount() {\n    clearInterval(this.timeout);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <TransitionGroup>\n          <CSSTransition component=\"div\" classNames=\"TabsAnimation\" appear={true}\n            timeout={1500} enter={false} exit={false}>\n            <Row>\n              <Col md=\"3\">\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Simple</CardTitle>\n                    <Sparklines height={90} data={sampleData}>\n                      <SparklinesLine />\n                    </Sparklines>\n                  </CardBody>\n                </Card>\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Simple curved</CardTitle>\n                    <Sparklines height={90} data={sampleData1}>\n                      <SparklinesCurve />\n                    </Sparklines>\n                  </CardBody>\n                </Card>\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Dynamic Sparklines</CardTitle>\n                    <div className=\"mb-2\">\n                      <Sparklines data={this.state.data} limit={20}>\n                        <SparklinesLine color=\"#1c8cdc\" />\n                        <SparklinesSpots />\n                      </Sparklines>\n                    </div>\n                    <div className=\"mb-2\">\n                      <Sparklines data={this.state.data} limit={20}>\n                        <SparklinesBars\n                          style={{\n                            fill: \"#41c3f9\",\n                            fillOpacity: \".25\",\n                          }}/>\n                        <SparklinesLine\n                          style={{\n                            stroke: \"#41c3f9\",\n                            fill: \"none\",\n                          }}/>\n                      </Sparklines>\n                    </div>\n                    <div className=\"mb-2\">\n                      <Sparklines data={this.state.data} limit={20}>\n                        <SparklinesLine\n                          style={{\n                            stroke: \"none\",\n                            fill: \"#8e44af\",\n                            fillOpacity: \"1\",\n                          }}/>\n                      </Sparklines>\n                    </div>\n                    <Sparklines data={this.state.data} limit={10}>\n                      <SparklinesBars color=\"#0a83d8\" />\n                    </Sparklines>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col md=\"6\">\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Normal Band</CardTitle>\n                    <Row>\n                      <Col md=\"6\">\n                        <Sparklines height={90} data={sampleData}>\n                          <SparklinesLine\n                            height=\"30\"\n                            style={{\n                              fill: \"none\",\n                            }}/>\n                        </Sparklines>\n                      </Col>\n                      <Col md=\"6\">\n                        <Sparklines height={90} data={sampleData}>\n                          <SparklinesLine\n                            height=\"30\"\n                            style={{\n                              fill: \"none\",\n                            }}/>\n                          <SparklinesReferenceLine height=\"30\" type=\"mean\" />\n                        </Sparklines>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Customizable</CardTitle>\n                    <Row>\n                      <Col md=\"4\">\n                        <div className=\"mb-2\">\n                          <Sparklines height={90} data={sampleData2}>\n                            <SparklinesLine color=\"#1c8cdc\" />\n                          </Sparklines>\n                        </div>\n                        <Sparklines height={90} data={sampleData3}>\n                          <SparklinesLine color=\"#fa7e17\" />\n                        </Sparklines>\n                      </Col>\n                      <Col md=\"4\">\n                        <div className=\"mb-2\">\n                          <Sparklines height={90} data={sampleData4}>\n                            <SparklinesLine color=\"#ea485c\" />\n                          </Sparklines>\n                        </div>\n                        <Sparklines height={90} data={sampleData5}>\n                          <SparklinesLine color=\"#56b45d\" />\n                        </Sparklines>\n                      </Col>\n                      <Col md=\"4\">\n                        <div className=\"mb-2\">\n                          <Sparklines height={90} data={sampleData6}>\n                            <SparklinesLine color=\"#253e56\" />\n                          </Sparklines>\n                        </div>\n                        <Sparklines height={90} data={sampleData7}>\n                          <SparklinesLine color=\"#8e44af\" />\n                        </Sparklines>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Spots</CardTitle>\n                    <Row>\n                      <Col md=\"4\">\n                        <Sparklines height={90} data={sampleData}>\n                          <SparklinesLine\n                            style={{\n                              fill: \"none\",\n                            }}/>\n                          <SparklinesSpots />\n                        </Sparklines>\n                      </Col>\n                      <Col md=\"4\">\n                        <Sparklines height={90} data={sampleData}>\n                          <SparklinesLine color=\"#56b45d\" />\n                          <SparklinesSpots\n                            style={{\n                              fill: \"#56b45d\",\n                            }}/>\n                        </Sparklines>\n                      </Col>\n                      <Col md=\"4\">\n                        <Sparklines height={90} data={sampleData} margin={6}>\n                          <SparklinesLine\n                            style={{\n                              strokeWidth: 3,\n                              stroke: \"#336aff\",\n                              fill: \"none\",\n                            }}/>\n                          <SparklinesSpots\n                            size={4}\n                            style={{\n                              stroke: \"#336aff\",\n                              strokeWidth: 3,\n                              fill: \"white\",\n                            }}/>\n                        </Sparklines>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Bars &amp; Bounds</CardTitle>\n                    <Row>\n                      <Col md=\"4\">\n                        <Sparklines height={90} data={sampleData} max={0.5}>\n                          <SparklinesLine />\n                        </Sparklines>\n                      </Col>\n                      <Col md=\"4\">\n                        <Sparklines height={90} data={sampleData}>\n                          <SparklinesBars\n                            style={{\n                              fill: \"#41c3f9\",\n                            }}/>\n                        </Sparklines>\n                      </Col>\n                      <Col md=\"4\">\n                        <Sparklines height={90} data={sampleData}>\n                          <SparklinesBars\n                            style={{\n                              stroke: \"white\",\n                              fill: \"#41c3f9\",\n                              fillOpacity: \".25\",\n                            }}/>\n                          <SparklinesLine\n                            style={{\n                              stroke: \"#41c3f9\",\n                              fill: \"none\",\n                            }}/>\n                        </Sparklines>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n\n              <Col md=\"3\">\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Reference Line</CardTitle>\n                    <div className=\"mb-4\">\n                      <Sparklines height={90} data={sampleData}>\n                        <SparklinesLine />\n                        <SparklinesReferenceLine type=\"max\" />\n                      </Sparklines>\n                    </div>\n                    <div className=\"mb-4\">\n                      <Sparklines height={90} data={sampleData}>\n                        <SparklinesLine />\n                        <SparklinesReferenceLine type=\"min\" />\n                      </Sparklines>\n                    </div>\n                    <div className=\"mb-4\">\n                      <Sparklines height={90} data={sampleData}>\n                        <SparklinesLine />\n                        <SparklinesReferenceLine type=\"mean\" />\n                      </Sparklines>\n                    </div>\n                    <div className=\"mb-4\">\n                      <Sparklines height={90} data={sampleData}>\n                        <SparklinesLine />\n                        <SparklinesReferenceLine type=\"avg\" />\n                      </Sparklines>\n                    </div>\n                    <div className=\"mb-4\">\n                      <Sparklines height={90} data={sampleData}>\n                        <SparklinesLine />\n                        <SparklinesReferenceLine type=\"median\" />\n                      </Sparklines>\n                    </div>\n                    <Sparklines height={90} data={sampleData}>\n                      <SparklinesBars\n                        style={{\n                          fill: \"slategray\",\n                          fillOpacity: \".5\",\n                        }}/>\n                      <SparklinesReferenceLine />\n                    </Sparklines>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col md=\"12\">\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Other Examples</CardTitle>\n                    <Row>\n                      <Col md=\"3\">\n                        <div className=\"mb-3\">\n                          <Sparklines height={90} data={sampleData}>\n                            <SparklinesLine\n                              style={{\n                                strokeWidth: 3,\n                                stroke: \"#336aff\",\n                                fill: \"none\",\n                              }}/>\n                          </Sparklines>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <div className=\"mb-3\">\n                          <Sparklines height={90} data={sampleData100} width={200}>\n                            <SparklinesLine\n                              style={{\n                                stroke: \"#2991c8\",\n                                fill: \"none\",\n                              }}/>\n                            <SparklinesSpots />\n                          </Sparklines>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <div className=\"mb-3\">\n                          <Sparklines height={90} data={sampleData100}>\n                            <SparklinesLine\n                              style={{\n                                stroke: \"black\",\n                                fill: \"none\",\n                              }}/>\n                            <SparklinesSpots\n                              style={{\n                                fill: \"orange\",\n                              }}/>\n                          </Sparklines>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <div className=\"mb-3\">\n                          <Sparklines height={90} data={sampleData}>\n                            <SparklinesBars\n                              style={{\n                                stroke: \"white\",\n                                strokeWidth: \"1\",\n                                fill: \"#40c0f5\",\n                              }}/>\n                          </Sparklines>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <div className=\"mb-3\">\n                          <Sparklines height={90} data={sampleData}>\n                            <SparklinesLine\n                              style={{\n                                stroke: \"#8ed53f\",\n                                strokeWidth: \"1\",\n                                fill: \"none\",\n                              }}/>\n                          </Sparklines>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <div className=\"mb-3\">\n                          <Sparklines height={90} data={sampleData}>\n                            <SparklinesLine\n                              style={{\n                                stroke: \"#d1192e\",\n                                strokeWidth: \"1\",\n                                fill: \"none\",\n                              }}/>\n                          </Sparklines>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <div className=\"mb-3\">\n                          <Sparklines height={90} data={sampleData}>\n                            <SparklinesLine\n                              style={{\n                                stroke: \"#559500\",\n                                fill: \"#8fc638\",\n                                fillOpacity: \"1\",\n                              }}/>\n                          </Sparklines>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <div className=\"mb-3\">\n                          <Sparklines height={90} data={sampleData}\n                            style={{\n                              background: \"#272727\",\n                            }}\n                            margin={10}>\n                            <SparklinesLine\n                              style={{\n                                stroke: \"none\",\n                                fill: \"#d2673a\",\n                                fillOpacity: \".5\",\n                              }}/>\n                          </Sparklines>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <div className=\"mb-1\">\n                          <Sparklines height={90} data={sampleData}\n                            style={{\n                              background: \"#00bdcc\",\n                            }}\n                            margin={10}>\n                            <SparklinesLine\n                              style={{\n                                stroke: \"white\",\n                                fill: \"none\",\n                              }}/>\n                            <SparklinesReferenceLine\n                              style={{\n                                stroke: \"white\",\n                                strokeOpacity: 0.75,\n                                strokeDasharray: \"2, 2\",\n                              }}/>\n                          </Sparklines>\n                        </div>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </CSSTransition>\n        </TransitionGroup>\n      </Fragment>\n    );\n  }\n}\n\nexport default ChartsSparklines1;\n","import React, { Component, Fragment } from \"react\";\n\nimport PageTitle from \"../../../Layout/AppMain/PageTitle\";\n\n// Examples\nimport ChartsSparklines1 from \"./Examples\";\n\nexport default class Sparklines1Examples extends Component {\n  render() {\n    return (\n      <Fragment>\n        <PageTitle heading=\"Sparklines 1\"\n          subheading=\"Use these Sparklines charts inside other components or on their own.\"\n          icon=\"pe-7s-pendrive icon-gradient bg-mean-fruit\"/>\n        <ChartsSparklines1 />\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport PropTypes from \"prop-types\";\n\nimport { Row, Col, Card, CardBody, CardTitle } from \"reactstrap\";\n\nimport {\n  AreaChart,\n  Area,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  Brush,\n  Legend,\n  ReferenceLine,\n  ResponsiveContainer,\n  RadialBarChart,\n  RadialBar,\n  BarChart,\n  Bar,\n  Cell,\n  ComposedChart,\n} from \"recharts\";\n\nconst data5 = [\n  { name: \"18-24\", uv: 31.47, pv: 2400, fill: \"#fece78\" },\n  { name: \"25-29\", uv: 26.69, pv: 4567, fill: \"#83a6ed\" },\n  { name: \"30-34\", uv: 15.69, pv: 1398, fill: \"#8dd1e1\" },\n  { name: \"35-39\", uv: 8.22, pv: 9800, fill: \"#82ca9d\" },\n  { name: \"40-49\", uv: 8.63, pv: 3908, fill: \"#a4de6c\" },\n  { name: \"50+\", uv: 2.63, pv: 4800, fill: \"#d0ed57\" },\n  { name: \"unknow\", uv: 6.67, pv: 4800, fill: \"#ffc658\" },\n];\n\n\nconst colors = [\n  \"#1f77b4\",\n  \"#ff7f0e\",\n  \"#2ca02c\",\n  \"#d62728\",\n  \"#9467bd\",\n  \"#8c564b\",\n  \"#e377c2\",\n  \"#7f7f7f\",\n  \"#bcbd22\",\n  \"#17becf\",\n];\n\nconst data1 = [\n  { name: \"Page A\", uv: 4000, female: 2400, male: 2400 },\n  { name: \"Page B\", uv: 3000, female: 1398, male: 2210 },\n  { name: \"Page C\", uv: 2000, female: 9800, male: 2290 },\n  { name: \"Page D\", uv: 2780, female: 3908, male: 2000 },\n  { name: \"Page E\", uv: 1890, female: 4800, male: 2181 },\n  { name: \"Page F\", uv: 2390, female: 3800, male: 2500 },\n  { name: \"Page G\", uv: 3490, female: 4300, male: 2100 },\n];\n\nconst data = [\n  { name: \"Page A\", uv: 4000, pv: 2400, amt: 2400 },\n  { name: \"Page B\", uv: 3000, pv: 1398, amt: 2210 },\n  { name: \"Page C\", uv: 2000, pv: 9800, amt: 2290 },\n  { name: \"Page D\", uv: 2780, pv: 3908, amt: 2000 },\n  { name: \"Page E\", uv: 1890, pv: 4800, amt: 2181 },\n  { name: \"Page F\", uv: 2390, pv: 3800, amt: 2500 },\n  { name: \"Page G\", uv: 3490, pv: 4300, amt: 2100 },\n];\n\nconst data3 = [\n  { month: \"2015.01\", a: 4000, b: 2400, c: 2400 },\n  { month: \"2015.02\", a: 3000, b: 1398, c: 2210 },\n  { month: \"2015.03\", a: 2000, b: 9800, c: 2290 },\n  { month: \"2015.04\", a: 2780, b: 3908, c: 2000 },\n  { month: \"2015.05\", a: 1890, b: 4800, c: 2181 },\n  { month: \"2015.06\", a: 2390, b: 3800, c: 2500 },\n  { month: \"2015.07\", a: 3490, b: 4300, c: 2100 },\n];\n\nconst getPercent = (value, total) => {\n  const ratio = total > 0 ? value / total : 0;\n\n  return toPercent(ratio, 2);\n};\n\nconst toPercent = (decimal, fixed = 0) => {\n  return `${(decimal * 100).toFixed(fixed)}%`;\n};\nconst renderTooltipContent = (o) => {\n  const { payload, label } = o;\n  const total = payload.reduce((result, entry) => result + entry.value, 0);\n\n  return (\n    <div className=\"customized-tooltip-content\">\n      <p className=\"total\">{`${label} (Total: ${total})`}</p>\n      <ul className=\"list\">\n        {payload.map((entry, index) => (\n          <li key={`item-${index}`} style={{ color: entry.color }}>\n            {`${entry.name}: ${entry.value}(${getPercent(entry.value, total)})`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst getPath = (x, y, width, height) => {\n  return `M${x},${y + height}\n          C${x + width / 3},${y + height} ${x + width / 2},${y +\n    height / 3} ${x + width / 2}, ${y}\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${y +\n    height} ${x + width}, ${y + height}\n          Z`;\n};\n\nconst TriangleBar = (props) => {\n  const { fill, x, y, width, height } = props;\n\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\n};\n\nTriangleBar.propTypes = {\n  fill: PropTypes.string,\n  x: PropTypes.number,\n  y: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\n\nclass ChartsSparklines2 extends React.Component {\n  render() {\n    return (\n      <Fragment>\n        <TransitionGroup>\n          <CSSTransition component=\"div\" classNames=\"TabsAnimation\" appear={true}\n            timeout={1500} enter={false} exit={false}>\n            <div>\n              <Row>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Simple Line Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <LineChart data={data} width={500} height={300}>\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <Tooltip />\n                          <Legend />\n                          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#fece78\" activeDot={{ r: 8 }}/>\n                          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n                        </LineChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Dashed Line Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <LineChart data={data}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend />\n                          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#fece78\" activeDot={{ r: 8 }} strokeDasharray=\"5 5\"/>\n                          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" strokeDasharray=\"3 4 5 2\"/>\n                        </LineChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Vertical Line Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <LineChart layout=\"vertical\" data={data}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis type=\"number\" />\n                          <YAxis dataKey=\"name\" type=\"category\" />\n                          <Tooltip />\n                          <Legend />\n                          <Line dataKey=\"pv\" stroke=\"#fece78\" />\n                          <Line dataKey=\"uv\" stroke=\"#82ca9d\" />\n                        </LineChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Simple Bar Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <BarChart data={data}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend />\n                          <Bar dataKey=\"pv\" fill=\"#fece78\" />\n                          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Custom Shape Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <BarChart data={data1}>\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <Bar dataKey=\"female\" fill=\"#fece78\" shape={<TriangleBar />} label={{ position: \"top\" }}>\n                            {data1.map((entry, index) => (\n                              <Cell\n                                key={`cell-${index}`}\n                                fill={colors[index % 20]}\n                              />\n                            ))}\n                          </Bar>\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Positive/Negative Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <BarChart data={data}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend />\n                          <ReferenceLine y={0} stroke=\"#000\" />\n                          <Bar dataKey=\"pv\" fill=\"#fece78\" />\n                          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>BrushBar Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <BarChart data={data}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: \"40px\" }}/>\n                          <ReferenceLine y={0} stroke=\"#000\" />\n                          <Brush dataKey=\"name\" height={30} stroke=\"#fece78\" />\n                          <Bar dataKey=\"pv\" fill=\"#fece78\" />\n                          <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Area Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <AreaChart data={data}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#fece78\" fill=\"#fece78\"/>\n                        </AreaChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Stacked Area Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <AreaChart data={data}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Area type=\"monotone\" dataKey=\"uv\" stackId=\"1\" stroke=\"#fece78\" fill=\"#fece78\"/>\n                          <Area type=\"monotone\" dataKey=\"pv\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\"/>\n                          <Area type=\"monotone\" dataKey=\"amt\" stackId=\"1\" stroke=\"#ffc658\" fill=\"#ffc658\"/>\n                        </AreaChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Area Percent Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <AreaChart data={data3} stackOffset=\"expand\">\n                          <XAxis dataKey=\"month\" />\n                          <YAxis tickFormatter={toPercent} />\n                          <Tooltip content={renderTooltipContent} />\n                          <Area type=\"monotone\" dataKey=\"a\" stackId=\"1\" stroke=\"#fece78\" fill=\"#fece78\"/>\n                          <Area type=\"monotone\" dataKey=\"b\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\"/>\n                          <Area type=\"monotone\" dataKey=\"c\" stackId=\"1\" stroke=\"#ffc658\" fill=\"#ffc658\"/>\n                        </AreaChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Composed Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <ComposedChart data={data}>\n                          <CartesianGrid stroke=\"#f5f5f5\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend />\n                          <Area type=\"monotone\" dataKey=\"amt\" fill=\"#fece78\" stroke=\"#fece78\"/>\n                          <Bar dataKey=\"pv\" barSize={20} fill=\"#413ea0\" />\n                          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#ff7300\" />\n                        </ComposedChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Radial Bar Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <RadialBarChart width={150} height={150} innerRadius={20}\n                          outerRadius={140} barSize={10} data={data5}>\n                          <RadialBar minAngle={15} label={{ position: \"insideStart\", fill: \"#fff\" }}\n                            background clockWise={true} dataKey=\"uv\"/>\n                        </RadialBarChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n              <Row>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Sparkline Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <LineChart data={data}>\n                          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#fece78\" strokeWidth={2}/>\n                        </LineChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Sparkbar Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <BarChart data={data}>\n                          <Bar dataKey=\"uv\" fill=\"#fece78\" />\n                        </BarChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>SparkArea Charts</CardTitle>\n                      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n                        <AreaChart width={200} height={60} data={data}\n                          margin={{ top: 5, right: 0, left: 0, bottom: 5 }}>\n                          <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#fece78\" fill=\"#fece78\"/>\n                        </AreaChart>\n                      </ResponsiveContainer>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </CSSTransition>\n        </TransitionGroup>\n      </Fragment>\n    );\n  }\n}\n\nexport default ChartsSparklines2;\n","import React, { Fragment } from \"react\";\n\nimport PageTitle from \"../../../Layout/AppMain/PageTitle\";\n\n// Examples\nimport ChartsSparklines2 from \"./Examples/index\";\n\nexport default class Sparklines2Examples extends React.Component {\n  render() {\n    return (\n      <Fragment>\n        <PageTitle heading=\"Sparklines 2\"\n          subheading=\"All kind of sparkliness charts are available, from lines to bar charts.\"\n          icon=\"pe-7s-plane icon-gradient bg-tempting-azure\"/>\n        <ChartsSparklines2 />\n      </Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport 'chart.js/auto';\nimport { Doughnut } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\"Cars\", \"Trains\", \"Airplanes\"],\n  datasets: [\n    {\n      data: [300, 50, 100],\n      backgroundColor: [\"#8dace7\", \"#71deb9\", \"#ef869e\"],\n      hoverBackgroundColor: [\"#7097e1\", \"#4dd6a7\", \"#eb6886\"],\n\n    },\n  ],\n};\n\n\nclass DoughnutExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <Doughnut data={data} width={667} height={270} options={{ maintainAspectRatio: false }} />\n      </div>\n    );\n  }\n}\n\nexport default DoughnutExample;\n","import React from \"react\";\nimport 'chart.js/auto';\nimport { Pie } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\"Cars\", \"Trains\", \"Airplanes\"],\n  datasets: [\n    {\n      data: [300, 50, 100],\n      backgroundColor: [\"#8dace7\", \"#71deb9\", \"#ef869e\"],\n      hoverBackgroundColor: [\"#8dace7\", \"#71deb9\", \"#ef869e\"],\n    },\n  ],\n};\n\nclass PieExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <Pie data={data} width={667} height={270} options={{ maintainAspectRatio: false }}/>\n      </div>\n    );\n  }\n}\n\nexport default PieExample;\n","import React from \"react\";\nimport 'chart.js/auto';\nimport { Doughnut } from \"react-chartjs-2\";\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n// var createReactClass = require('create-react-class');\nexport default class DynamicDoughnutExample extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {\n        labels: [\"Cars\", \"Trains\", \"Airplanes\"],\n        datasets: [\n          {\n            data: [\n              getRandomInt(50, 200),\n              getRandomInt(100, 150),\n              getRandomInt(150, 250),\n            ],\n            backgroundColor: [\"#cbd5dc\", \"#71deb9\", \"#ef869e\"],\n            hoverBackgroundColor: [\"#7097e1\", \"#4dd6a7\", \"#eb6886\"],\n          },\n        ],\n      },\n    };\n  }\n  render() {\n    return (\n      <div>\n        <Doughnut data={this.state.data} width={667} height={270} options={{ maintainAspectRatio: false }}/>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport 'chart.js/auto';\nimport { Radar } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\n    \"Eating\",\n    \"Drinking\",\n    \"Sleeping\",\n    \"Designing\",\n    \"Coding\",\n    \"Cycling\",\n    \"Running\",\n  ],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      backgroundColor: \"rgba(179,181,198,0.2)\",\n      borderColor: \"rgba(179,181,198,1)\",\n      pointBackgroundColor: \"rgba(179,181,198,1)\",\n      pointBorderColor: \"#fff\",\n      pointHoverBackgroundColor: \"#fff\",\n      pointHoverBorderColor: \"rgba(179,181,198,1)\",\n      data: [65, 59, 90, 81, 56, 55, 40],\n    },\n    {\n      label: \"My Second dataset\",\n      backgroundColor: \"rgba(255,99,132,0.2)\",\n      borderColor: \"rgba(255,99,132,1)\",\n      pointBackgroundColor: \"rgba(255,99,132,1)\",\n      pointBorderColor: \"#fff\",\n      pointHoverBackgroundColor: \"#fff\",\n      pointHoverBorderColor: \"rgba(255,99,132,1)\",\n      data: [28, 48, 40, 19, 96, 27, 100],\n    },\n  ],\n};\n\nclass RadarExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <Radar data={data} width={667} height={270} options={{ maintainAspectRatio: false }}/>\n      </div>\n    );\n  }\n}\n\nexport default RadarExample;\n","import React from \"react\";\nimport 'chart.js/auto';\nimport { PolarArea } from \"react-chartjs-2\";\n\nconst data = {\n  datasets: [\n    {\n      data: [11, 16, 7, 3, 14],\n      backgroundColor: [\"#8dace7\", \"#4BC0C0\", \"#ef869e\", \"#E7E9ED\", \"#71deb9\"],\n      label: \"My dataset\", // for legend\n    },\n  ],\n  labels: [\"Red\", \"Green\", \"Yellow\", \"Grey\", \"Blue\"],\n};\n\nclass PolarExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <PolarArea data={data} width={667} height={270} options={{ maintainAspectRatio: false }}/>\n      </div>\n    );\n  }\n}\n\nexport default PolarExample;\n","import React, { Fragment } from \"react\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport DoughnutExample from \"../doughnut\";\nimport PieExample from \"../pie\";\nimport DynamicDoughnutExample from \"../dynamicDoughnut\";\nimport RadarExample from \"../radar\";\nimport PolarExample from \"../polar\";\n\nimport { Row, Col, Card, CardBody, CardTitle, Container } from \"reactstrap\";\n\nexport default class ChartJsCircular extends React.Component {\n  componentDidMount() {\n    window.removeEventListener(\"keyup\", this.keyHandling);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <TransitionGroup>\n          <CSSTransition component=\"div\" classNames=\"TabsAnimation\" appear={true}\n            timeout={0} enter={false} exit={false}>\n            <Container fluid>\n              <Row>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Doughnut</CardTitle>\n                      <DoughnutExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Dynamic Doughnut Chart</CardTitle>\n                      <DynamicDoughnutExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Radar Chart</CardTitle>\n                      <RadarExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Polar Chart</CardTitle>\n                      <PolarExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Pie Chart</CardTitle>\n                      <PieExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </Container>\n          </CSSTransition>\n        </TransitionGroup>\n      </Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport 'chart.js/auto';\nimport { Line } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: \"#ed0f51\",\n      borderColor: \"#ed0f51\",\n      borderCapStyle: \"round\",\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: \"miter\",\n      pointBorderColor: \"#ed0f51\",\n      pointBackgroundColor: \"#ffffff\",\n      pointBorderWidth: 2,\n      pointHoverRadius: 10,\n      pointHoverBackgroundColor: \"#ed0f51\",\n      pointHoverBorderColor: \"#ed0f51\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n};\n\nclass LineExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <Line data={data} />\n      </div>\n    );\n  }\n}\n\nexport default LineExample;\n","import React from \"react\";\nimport 'chart.js/auto';\nimport { Line } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      fill: true,\n      lineTension: 0.1,\n      backgroundColor: \"rgba(75,192,192,0.4)\",\n      borderColor: \"rgba(75,192,192,1)\",\n      borderCapStyle: \"round\",\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: \"miter\",\n      pointBorderColor: \"rgba(75,192,192,1)\",\n      pointBackgroundColor: \"#fff\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n};\n\nclass LineExample2 extends React.Component {\n  render() {\n    return (\n      <div>\n        <Line data={data} />\n      </div>\n    );\n  }\n}\n\nexport default LineExample2;\n","import React from \"react\";\nimport 'chart.js/auto';\nimport { Bar } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      backgroundColor: \"rgba(255,99,132,0.2)\",\n      borderColor: \"rgba(255,99,132,1)\",\n      borderWidth: 1,\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n      hoverBorderColor: \"rgba(255,99,132,1)\",\n      borderCapStyle: \"round\",\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n};\n\nclass BarExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <Bar data={data} width={100} height={50}\n          options={{\n            maintainAspectRatio: true,\n          }} />\n      </div>\n    );\n  }\n}\n\nexport default BarExample;\n","import React from \"react\";\nimport 'chart.js/auto';\nimport { Bar  } from \"react-chartjs-2\";\n\nconst data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      backgroundColor: \"rgba(255,99,132,0.2)\",\n      borderColor: \"rgba(255,99,132,1)\",\n      borderWidth: 1,\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n      hoverBorderColor: \"rgba(255,99,132,1)\",\n      borderCapStyle: \"round\",\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n};\n\nconst options = {\n  indexAxis: 'y',\n};\nclass BarExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <Bar data={data} options={options}/>\n      </div>\n    );\n  }\n}\n\nexport default BarExample;\n","import React from \"react\";\nimport 'chart.js/auto';\nimport { Line } from \"react-chartjs-2\";\n\nconst initialState = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      label: \"My First dataset\",\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: \"rgba(75,192,192,0.4)\",\n      borderColor: \"rgba(75,192,192,1)\",\n      borderCapStyle: \"round\",\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: \"miter\",\n      pointBorderColor: \"rgba(75,192,192,1)\",\n      pointBackgroundColor: \"#fff\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n};\n\n// var createReactClass = require('create-react-class');\n\nclass Graph extends React.Component {\n  UNSAFE_componentWillMount() {\n    this.setState(initialState);\n  }\n  componentDidMount() {\n    var _this = this;\n\n    setInterval(function() {\n      var oldDataSet = _this.state.datasets[0];\n      var newData = [];\n\n      for (var x = 0; x < _this.state.labels.length; x++) {\n        newData.push(Math.floor(Math.random() * 100));\n      }\n\n      var newDataSet = {\n        ...oldDataSet,\n      };\n\n      newDataSet.data = newData;\n\n      var newState = {\n        ...initialState,\n        datasets: [newDataSet],\n      };\n\n      _this.setState(newState);\n    }, 5000);\n  }\n  render() {\n    return <Line data={this.state} />;\n  }\n}\n\nclass MixExample extends React.Component {\n  render() {\n    return (\n      <div>\n        <Graph />\n      </div>\n    );\n  }\n}\n\nexport default MixExample;\n","import React, { Fragment } from \"react\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport LineExample from \"../line\";\nimport LineExample2 from \"../line2\";\nimport BarExample from \"../bar\";\nimport HorizontalBarExample from \"../horizontalBar\";\nimport MixExample from \"../mix\";\n\nimport { Row, Col, Card, CardBody, CardTitle, Container } from \"reactstrap\";\n\nexport default class ChartJsLinesBars extends React.Component {\n  render() {\n    return (\n      <Fragment>\n        <TransitionGroup>\n          <CSSTransition component=\"div\" classNames=\"TabsAnimation\" appear={true}\n            timeout={0} enter={false} exit={false}>\n            <Container fluid>\n              <Row>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Line Chart</CardTitle>\n                      <LineExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Animated Line Chart</CardTitle>\n                      <MixExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Area Chart</CardTitle>\n                      <LineExample2 />\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Bar Chart</CardTitle>\n                      <BarExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col lg=\"6\">\n                  <Card className=\"main-card mb-3\">\n                    <CardBody>\n                      <CardTitle>Horizontal Bar Chart</CardTitle>\n                      <HorizontalBarExample />\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </Container>\n          </CSSTransition>\n        </TransitionGroup>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport PageTitle from \"../../../Layout/AppMain/PageTitle\";\n\nimport Tabs, { TabPane } from \"rc-tabs\";\nimport TabContent from \"rc-tabs/lib/SwipeableTabContent\";\nimport ScrollableInkTabBar from \"rc-tabs/lib/ScrollableInkTabBar\";\n\n// Examples\nimport ChartJsCircular from \"./Examples/Circular\";\nimport ChartJsLinesBars from \"./Examples/LinesBars\";\n\nexport default class ChartJSExamples extends Component {\n  render() {\n    return (\n      <Fragment>\n        <TransitionGroup>\n          <CSSTransition component=\"div\" classNames=\"TabsAnimation\" appear={true}\n            timeout={1500} enter={false} exit={false}>\n            <div>  \n              <PageTitle heading=\"ChartJS\"\n                subheading=\"Huge selection of charts created with the React ChartJS Plugin\"\n                icon=\"pe-7s-bandaid icon-gradient bg-amy-crisp\"/>\n              <Tabs defaultActiveKey=\"1\" renderTabBar={() => <ScrollableInkTabBar />} renderTabContent={() => <TabContent />}>\n                <TabPane tab=\"Circular Charts\" key=\"1\">\n                  <ChartJsCircular />\n                </TabPane>\n                <TabPane tab=\"Lines & Bars Charts\" key=\"2\">\n                  <ChartJsLinesBars />\n                </TabPane>\n              </Tabs>\n            </div>\n          </CSSTransition>\n        </TransitionGroup>\n      </Fragment>\n    );\n  }\n}\n","import { color } from \"d3-color\";\nimport { interpolateRgb } from \"d3-interpolate\";\nimport React, { Fragment, Component } from \"react\";\nimport LiquidFillGauge from \"react-liquid-gauge\";\nimport { Row, Col, Card, CardBody, CardTitle, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nexport default class ChartsLiquidGaugeExample extends Component {\n  state = {\n    value: 50,\n  };\n  startColor = \"#6495ed\"; // cornflowerblue\n  endColor = \"#dc143c\"; // crimson\n  render() {\n    const radius = 80;\n    const interpolate = interpolateRgb(this.startColor, this.endColor);\n    const fillColor = interpolate(this.state.value / 100);\n    const gradientStops = [\n      {\n        key: \"0%\",\n        stopColor: color(fillColor)\n          .darker(0.5)\n          .toString(),\n        stopOpacity: 1,\n        offset: \"0%\",\n      },\n      {\n        key: \"50%\",\n        stopColor: fillColor,\n        stopOpacity: 0.75,\n        offset: \"50%\",\n      },\n      {\n        key: \"100%\",\n        stopColor: color(fillColor)\n          .brighter(0.5)\n          .toString(),\n        stopOpacity: 0.5,\n        offset: \"100%\",\n      },\n    ];\n    return (\n      <Fragment>\n        <TransitionGroup>\n          <CSSTransition component=\"div\" classNames=\"TabsAnimation\" appear={true}\n            timeout={1500} enter={false} exit={false}>\n            <Row>\n              <Col md=\"12\">\n                <Card className=\"main-card mb-3\">\n                  <CardBody>\n                    <CardTitle>Liquid Gauges</CardTitle>\n                    <Row className=\"text-center\">\n                      <Col md=\"6\" lg=\"4\">\n                        <LiquidFillGauge style={{ margin: \"0 auto\" }} width={radius} height={radius} value={this.state.value}\n                          percent=\"\" textSize={1} textOffsetX={0} textOffsetY={0}\n                          textRenderer={(props) => {\n                            const value = Math.round(props.value);\n                            const radius = Math.min(\n                              props.height / 2,\n                              props.width / 2\n                            );\n                            const textPixels = (props.textSize * radius) / 2;\n                            const valueStyle = {\n                              fontSize: textPixels,\n                            };\n                            const percentStyle = {\n                              fontSize: textPixels * 0.6,\n                            };\n\n                            return (\n                              <tspan>\n                                <tspan className=\"value\" style={valueStyle}>\n                                  {value}\n                                </tspan>\n                                <tspan style={percentStyle}>\n                                  {props.percent}\n                                </tspan>\n                              </tspan>\n                            );\n                          }}\n                          riseAnimation waveAnimation waveFrequency={5} waveAmplitude={3} gradient\n                          gradientStops={gradientStops}\n                          circleStyle={{\n                            fill: fillColor,\n                          }}\n                          waveStyle={{\n                            fill: fillColor,\n                          }}\n                          textStyle={{\n                            fill: color(\"#989fa4\").toString(),\n                          }}\n                          waveTextStyle={{\n                            fill: color(\"#fff\").toString(),\n                          }}\n                          onClick={() => {\n                            this.setState({ value: Math.random() * 100 });\n                          }}/>\n                      </Col>\n                      <Col md=\"6\" lg=\"4\">\n                        <LiquidFillGauge style={{ margin: \"0 auto\" }} width={radius * 1.5} height={radius * 1.5}\n                          value={this.state.value} percent=\"\" textSize={1} textOffsetX={0} textOffsetY={0}\n                          textRenderer={(props) => {\n                            const value = Math.round(props.value);\n                            const radius = Math.min(\n                              props.height / 2,\n                              props.width / 2\n                            );\n                            const textPixels = (props.textSize * radius) / 2;\n                            const valueStyle = {\n                              fontSize: textPixels,\n                            };\n                            const percentStyle = {\n                              fontSize: textPixels * 0.6,\n                            };\n\n                            return (\n                              <tspan>\n                                <tspan className=\"value\" style={valueStyle}>\n                                  {value}\n                                </tspan>\n                                <tspan style={percentStyle}>\n                                  {props.percent}\n                                </tspan>\n                              </tspan>\n                            );\n                          }}\n                          riseAnimation waveAnimation waveFrequency={3} waveAmplitude={4} gradient\n                          gradientStops={gradientStops}\n                          circleStyle={{\n                            fill: fillColor,\n                          }}\n                          waveStyle={{\n                            fill: fillColor,\n                          }}\n                          textStyle={{\n                            fill: color(\"#989fa4\").toString(),\n                          }}\n                          waveTextStyle={{\n                            fill: color(\"#fff\").toString(),\n                          }}\n                          onClick={() => {\n                            this.setState({ value: Math.random() * 100 });\n                          }}\n                        />\n                      </Col>\n                      <Col md=\"6\" lg=\"4\">\n                        <LiquidFillGauge style={{ margin: \"0 auto\" }} width={radius * 2} height={radius * 2}\n                          value={this.state.value} percent=\"%\" textSize={1} textOffsetX={0} textOffsetY={0}\n                          textRenderer={(props) => {\n                            const value = Math.round(props.value);\n                            const radius = Math.min(\n                              props.height / 2,\n                              props.width / 2\n                            );\n                            const textPixels = (props.textSize * radius) / 2;\n                            const valueStyle = {\n                              fontSize: textPixels,\n                            };\n                            const percentStyle = {\n                              fontSize: textPixels * 0.6,\n                            };\n\n                            return (\n                              <tspan>\n                                <tspan className=\"value\" style={valueStyle}>\n                                  {value}\n                                </tspan>\n                                <tspan style={percentStyle}>\n                                  {props.percent}\n                                </tspan>\n                              </tspan>\n                            );\n                          }}\n                          riseAnimation waveAnimation waveFrequency={3} waveAmplitude={2} gradient\n                          gradientStops={gradientStops}\n                          circleStyle={{\n                            fill: fillColor,\n                          }}\n                          waveStyle={{\n                            fill: fillColor,\n                          }}\n                          textStyle={{\n                            fill: color(\"#989fa4\").toString(),\n                          }}\n                          waveTextStyle={{\n                            fill: color(\"#fff\").toString(),\n                          }}\n                          onClick={() => {\n                            this.setState({ value: Math.random() * 100 });\n                          }}/>\n                      </Col>\n                    </Row>\n                    <div className=\"divider\" />\n                    <div className=\"text-center\">\n                      <Button type=\"button\" color=\"primary\" className=\"btn-wide btn-shadow btn-pill\"\n                        onClick={() => {\n                          this.setState({ value: Math.random() * 100 });\n                        }}>\n                        Refresh\n                      </Button>\n                    </div>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </CSSTransition>\n        </TransitionGroup>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport PageTitle from \"../../../Layout/AppMain/PageTitle\";\n\n// Examples\nimport ChartsLiquidGaugeExample from \"./Examples/liquidGauge\";\n\nexport default class ChartsGauges extends Component {\n  render() {\n    return (\n      <Fragment>\n        <PageTitle heading=\"Gauges\"\n          subheading=\"Create wonderful animated gauges that can be used in combination with other ArchitectUI elements.\"\n          icon=\"pe-7s-car icon-gradient bg-warm-flame\"/>\n        <ChartsLiquidGaugeExample />\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\nclass Area extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options3: {\n                chart: {\n                    height: 350,\n                    type: 'area',\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                stroke: {\n                    curve: 'smooth'\n                },\n                xaxis: {\n                    type: 'datetime',\n                    categories: [\"2018-09-19T00:00:00\", \"2018-09-19T01:30:00\", \"2018-09-19T02:30:00\", \"2018-09-19T03:30:00\", \"2018-09-19T04:30:00\", \"2018-09-19T05:30:00\", \"2018-09-19T06:30:00\"],\n                },\n                tooltip: {\n                    x: {\n                        format: 'dd/MM/yy HH:mm'\n                    },\n                }\n            },\n\n            series: [{\n                name: 'series1',\n                data: [31, 40, 28, 51, 42, 109, 100]\n            }, {\n                name: 'series2',\n                data: [11, 32, 45, 32, 34, 52, 41]\n            }],\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"area\">\n                <Chart options={this.state.options3} series={this.state.series} width=\"100%\" />\n            </div>\n        );\n    }\n}\n\nexport default Area;\n","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\nclass Bar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options2: {\n                chart: {\n                    id: 'apexchart-example-3'\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                plotOptions: {\n                    bar: {\n                        horizontal: true\n                    }\n                },\n                xaxis: {\n                    categories: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n                }\n            },\n            series2: [{\n                data: [30, 40, 25, 50, 49, 21, 70, 51]\n            }],\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"bar\">\n                <Chart options={this.state.options2} series={this.state.series2} type=\"bar\" width=\"100%\" />\n            </div>\n        );\n    }\n}\n\nexport default Bar;\n","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\nclass Donut extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options4: {\n        chart: {\n          id: 'apexchart-example-2'\n        },\n        labels: ['A', 'B', 'C', 'D', 'E'],\n      },\n      series4: [44, 55, 41, 17, 15],\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"donut text-center\">\n        <Chart options={this.state.options4} series={this.state.series4} type=\"donut\" width=\"50%\" />\n      </div>\n    );\n  }\n}\n\nexport default Donut;\n","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\nclass RadialBar extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: {\n        labels: ['RadialBar'],\n        plotOptions: {\n          radialBar: {\n            hollow: {\n              size: '70%',\n            }\n          },\n        },\n      },\n      series: [68],\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"radialbar\">\n        <Chart options={this.state.options} series={this.state.series} type=\"radialBar\" height=\"380\" />\n      </div>\n    );\n  }\n}\n\nexport default RadialBar;\n","import React, { Component, Fragment } from \"react\";\n\nimport { Row, Col, Card, CardBody, CardTitle } from \"reactstrap\";\n\n// Examples\nimport Area from \"./Area\";\nimport Bar from \"./Bar\";\n// import Column from './Column';\n// import Line from './Line';\nimport Donut from \"./Donut\";\nimport RadialBar from \"./RadialBar\";\n\nexport default class ApexChartsBasic extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Row>\n          <Col md=\"6\">\n            <Card className=\"mb-3\">\n              <CardBody>\n                <CardTitle>Line</CardTitle>\n                <Area />\n              </CardBody>\n            </Card>\n            <Card className=\"mb-3\">\n              <CardBody>\n                <CardTitle>Donut</CardTitle>\n                <Donut />\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"6\">\n            <Card className=\"mb-3\">\n              <CardBody>\n                <CardTitle>RadialBar</CardTitle>\n                <RadialBar />\n              </CardBody>\n            </Card>\n            <Card className=\"mb-3\">\n              <CardBody>\n                <CardTitle>Bar</CardTitle>\n                <Bar />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\nclass Area extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options3: {\n                chart: {\n                    height: 350,\n                    type: 'area',\n                    sparkline: {\n                        enabled: true,\n                    }\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                stroke: {\n                    curve: 'smooth'\n                },\n                xaxis: {\n                    type: 'datetime',\n                    categories: [\"2018-09-19T00:00:00\", \"2018-09-19T01:30:00\", \"2018-09-19T02:30:00\", \"2018-09-19T03:30:00\", \"2018-09-19T04:30:00\", \"2018-09-19T05:30:00\", \"2018-09-19T06:30:00\"],\n                },\n                tooltip: {\n                    x: {\n                        format: 'dd/MM/yy HH:mm'\n                    },\n                },\n            },\n\n            series: [{\n                name: 'series1',\n                data: [31, 40, 28, 51, 42, 109, 100]\n            }, {\n                name: 'series2',\n                data: [11, 32, 45, 32, 34, 52, 41]\n            }],\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"area\">\n                <Chart options={this.state.options3} series={this.state.series} width=\"100%\" />\n            </div>\n        );\n    }\n}\n\nexport default Area;","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\nclass Bar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            options: {\n                dataLabels: {\n                    enabled: false\n                },\n                plotOptions: {\n                    bar: {\n                        horizontal: true\n                    }\n                },\n                xaxis: {\n                    categories: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n                },\n\n                chart: {\n                    sparkline: {\n                        enabled: true,\n                    }\n                }\n            },\n            series: [{\n                data: [30, 40, 25, 50, 49, 21, 70, 51]\n            }],\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"bar\">\n                <Chart options={this.state.options} series={this.state.series} type=\"bar\" width=\"100%\" />\n            </div>\n        );\n    }\n}\n\nexport default Bar;\n","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\nclass Line extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: {\n        stroke: {\n          curve: 'smooth'\n        },\n        markers: {\n          size: 0\n        },\n        xaxis: {\n          categories: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        chart: {\n          sparkline: {\n            enabled: true,\n          }\n        }\n      },\n      series: [{\n        data: [30, 40, 25, 50, 49, 21, 70, 51]\n      }],\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"line\">\n        <Chart options={this.state.options} series={this.state.series} type=\"line\" width=\"100%\" />\n      </div>\n    );\n  }\n}\n\nexport default Line;\n","import React, { Component, Fragment } from \"react\";\n\nimport { Row, Col, Card, CardBody, CardTitle } from \"reactstrap\";\n\n// Examples\nimport Area from \"./Area\";\nimport Bar from \"./Bar\";\n// import Column from './Column';\nimport Line from \"./Line\";\n\nexport default class ApexChartsSparklines extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Row>\n          <Col md=\"4\">\n            <Card className=\"mb-3\">\n              <CardBody>\n                <CardTitle>Area</CardTitle>\n                <Area />\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"4\">\n            <Card className=\"mb-3\">\n              <CardBody>\n                <CardTitle>Bar</CardTitle>\n                <Bar />\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"4\">\n            <Card className=\"mb-3\">\n              <CardBody>\n                <CardTitle>Line</CardTitle>\n                <Line />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport PageTitle from \"../../../Layout/AppMain/PageTitle\";\n\n// Examples\nimport ApexChartsBasic from \"./Examples/Basic/\";\nimport ApexChartsSparklines from \"./Examples/Sparklines/\";\n\nexport default class ApexCharts extends Component {\n  render() {\n    return (\n      <Fragment>\n        <PageTitle heading=\"Apex Charts\"\n          subheading=\"Wonderful animated charts built as a ReactJS component.\"\n          icon=\"pe-7s-graph2 icon-gradient bg-happy-green\"/>\n        <ApexChartsBasic />\n        <ApexChartsSparklines />\n      </Fragment>\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\nimport { Route } from \"react-router-dom\";\n\n// Charts\n\nimport ChartsSparklines1 from \"./Sparklines1/\";\nimport ChartsSparklines2 from \"./Sparklines2/\";\nimport ChartsChartJs from \"./ChartJs/\";\nimport ChartsGauges from \"./Gauges/\";\nimport ApexCharts from \"./ApexCharts/\";\n\n// Layout\n\nimport AppHeader from \"../../Layout/AppHeader/\";\nimport AppSidebar from \"../../Layout/AppSidebar/\";\nimport AppFooter from \"../../Layout/AppFooter/\";\n\n// Theme Options\n\nconst Charts = ({ match }) => (\n  <Fragment>\n    <AppHeader />\n    <div className=\"app-main\">\n      <AppSidebar />\n      <div className=\"app-main__outer\">\n        <div className=\"app-main__inner\">\n          {/* Charts */}\n\n          <Route path={`${match.url}/sparklines-1`} component={ChartsSparklines1} />\n          <Route path={`${match.url}/sparklines-2`} component={ChartsSparklines2} />\n          <Route path={`${match.url}/chartjs`} component={ChartsChartJs} />\n          <Route path={`${match.url}/gauges`} component={ChartsGauges} />\n          <Route path={`${match.url}/apexcharts`} component={ApexCharts} />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  </Fragment>\n);\n\nexport default Charts;\n","import React, { Component, Fragment } from \"react\";\n\nimport { Button, UncontrolledTooltip } from \"reactstrap\";\n\nimport { toast, Slide } from \"react-toastify\";\n\nimport { faBatteryThreeQuarters } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default class TitleComponent1 extends Component {\n  state = {\n    expZoomIn: false,\n  };\n\n  toggle(name) {\n    this.setState({\n      [name]: !this.state[name],\n      progress: 0.5,\n    });\n  }\n\n  notify22 = () =>\n    (this.toastId = toast(\"You can add whatever element in this section.\", {\n      transition: Slide,\n      closeButton: true,\n      autoClose: 5000,\n      position: \"bottom-center\",\n      type: \"default\",\n    }));\n\n  render() {\n    return (\n      <Fragment>\n        <Button className=\"btn-pill btn-shadow me-3\" onClick={this.notify22} color=\"info\" id=\"Tooltip-123\">\n          <FontAwesomeIcon icon={faBatteryThreeQuarters} />\n        </Button>\n        <UncontrolledTooltip placement=\"left\" target={\"Tooltip-123\"}>\n          Show a Toastify notification example!\n        </UncontrolledTooltip>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n  UncontrolledTooltip,\n} from \"reactstrap\";\n\nimport { faStar, faBusinessTime } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { toast, Slide } from \"react-toastify\";\n\nexport default class TitleComponent2 extends Component {\n  toggle(name) {\n    this.setState({\n      [name]: !this.state[name],\n      progress: 0.5,\n    });\n  }\n\n  notify22 = () =>\n    (this.toastId = toast(\"Another toastify example!!!\", {\n      transition: Slide,\n      closeButton: true,\n      autoClose: 5000,\n      position: \"bottom-center\",\n      type: \"success\",\n    }));\n\n  render() {\n    return (\n      <Fragment>\n        <Button className=\"btn-shadow me-3\" onClick={this.notify22} color=\"dark\" id=\"Tooltip-123\">\n          <FontAwesomeIcon icon={faStar} />\n        </Button>\n        <UncontrolledTooltip placement=\"left\" target={\"Tooltip-123\"}>\n          Show a Toastify notification example!\n        </UncontrolledTooltip>\n        <UncontrolledDropdown className=\"d-inline-block\">\n          <DropdownToggle color=\"info\" className=\"btn-shadow\" caret>\n            <span className=\"btn-icon-wrapper pe-2 opacity-7\">\n              <FontAwesomeIcon icon={faBusinessTime} />\n            </span>\n            Buttons\n          </DropdownToggle>\n          <DropdownMenu end>\n            <Nav vertical>\n              <NavItem>\n                <NavLink href=\"#\">\n                  <i className=\"nav-link-icon lnr-inbox\"> </i>\n                  <span>Inbox</span>\n                  <div className=\"ms-auto badge rounded-pill bg-secondary\">\n                    86\n                  </div>\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#\">\n                  <i className=\"nav-link-icon lnr-book\"> </i>\n                  <span>Book</span>\n                  <div className=\"ms-auto badge rounded-pill bg-danger\">5</div>\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#\">\n                  <i className=\"nav-link-icon lnr-picture\"> </i>\n                  <span>Picture</span>\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink disabled href=\"#\">\n                  <i className=\"nav-link-icon lnr-file-empty\"> </i>\n                  <span>File Disabled</span>\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport cx from \"classnames\";\n\nimport TitleComponent1 from \"./PageTitleExamples/Variation1\";\nimport TitleComponent2 from \"./PageTitleExamples/Variation2\";\nimport TitleComponent3 from \"./PageTitleExamples/Variation3\";\n\nclass PageTitle extends Component {\n  randomize(myArray) {\n    return myArray[Math.floor(Math.random() * myArray.length)];\n  }\n\n  render() {\n    let {\n      enablePageTitleIcon,\n      enablePageTitleSubheading,\n\n      heading,\n      icon,\n      subheading,\n    } = this.props;\n\n    var arr = [<TitleComponent1 />, <TitleComponent2 />, <TitleComponent3 />];\n\n    return (\n      <div className=\"app-page-title\">\n        <div className=\"page-title-wrapper\">\n          <div className=\"page-title-heading\">\n            <div>\n              {heading}\n              <div className={cx(\"page-title-subheading\", {\n                \"d-none\": !enablePageTitleSubheading,\n              })}>\n                {subheading}\n              </div>\n            </div>\n          </div>\n          {/* <div className=\"page-title-actions\">{this.randomize(arr)}</div> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  enablePageTitleIcon: state.ThemeOptions.enablePageTitleIcon,\n  enablePageTitleSubheading: state.ThemeOptions.enablePageTitleSubheading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PageTitle);\n","import React, { Component, Fragment } from \"react\";\n\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default class TitleComponent3 extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <a href=\"https://colorlib.com/\" onClick={(e) => e.preventDefault()}>\n              <FontAwesomeIcon icon={faHome} />\n            </a>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <a href=\"https://colorlib.com/\" onClick={(e) => e.preventDefault()}>\n              Dashboards\n            </a>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Example Breadcrumb</BreadcrumbItem>\n        </Breadcrumb>\n      </Fragment>\n    );\n  }\n}\n"],"names":["boxMullerRandom","x1","x2","w","Math","random","sqrt","log","randomData","n","arguments","length","undefined","Array","apply","map","sampleData","sampleData1","sampleData2","sampleData3","sampleData4","sampleData5","sampleData6","sampleData7","sampleData100","_React$Component","_inherits","ChartsSparklines1","_super","_createSuper","props","_this","_classCallCheck","call","state","data","setInterval","setState","concat","_createClass","key","value","clearInterval","this","timeout","_jsx","Fragment","children","TransitionGroup","CSSTransition","component","classNames","appear","enter","exit","_jsxs","Row","Col","md","Card","className","CardBody","CardTitle","Sparklines","height","SparklinesLine","SparklinesCurve","limit","color","SparklinesSpots","SparklinesBars","style","fill","fillOpacity","stroke","SparklinesReferenceLine","type","margin","strokeWidth","size","max","width","background","strokeOpacity","strokeDasharray","React","Sparklines1Examples","_Component","PageTitle","heading","subheading","icon","Component","data5","name","uv","pv","colors","data1","female","male","amt","data3","month","a","b","c","getPercent","total","toPercent","decimal","toFixed","renderTooltipContent","o","payload","label","reduce","result","entry","index","getPath","x","y","TriangleBar","d","ChartsSparklines2","lg","ResponsiveContainer","aspect","LineChart","XAxis","dataKey","YAxis","CartesianGrid","Tooltip","Legend","Line","activeDot","r","layout","BarChart","Bar","shape","position","Cell","ReferenceLine","verticalAlign","wrapperStyle","lineHeight","Brush","AreaChart","Area","stackId","stackOffset","tickFormatter","content","ComposedChart","barSize","RadialBarChart","innerRadius","outerRadius","RadialBar","minAngle","clockWise","top","right","left","bottom","Sparklines2Examples","labels","datasets","backgroundColor","hoverBackgroundColor","DoughnutExample","Doughnut","options","maintainAspectRatio","PieExample","Pie","getRandomInt","min","floor","DynamicDoughnutExample","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","RadarExample","Radar","PolarExample","PolarArea","ChartJsCircular","window","removeEventListener","keyHandling","Container","fluid","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","LineExample","LineExample2","borderWidth","hoverBorderColor","BarExample","indexAxis","initialState","Graph","oldDataSet","newData","push","newDataSet","_objectSpread","newState","MixExample","_React$Component2","_super2","ChartJsLinesBars","HorizontalBarExample","ChartJSExamples","Tabs","defaultActiveKey","renderTabBar","ScrollableInkTabBar","renderTabContent","TabContent","TabPane","tab","ChartsLiquidGaugeExample","_len","args","_key","startColor","endColor","_this2","radius","fillColor","interpolateRgb","interpolate","gradientStops","stopColor","darker","toString","stopOpacity","offset","brighter","LiquidFillGauge","percent","textSize","textOffsetX","textOffsetY","textRenderer","round","textPixels","valueStyle","fontSize","percentStyle","riseAnimation","waveAnimation","waveFrequency","waveAmplitude","gradient","circleStyle","waveStyle","textStyle","waveTextStyle","onClick","Button","ChartsGauges","options3","chart","dataLabels","enabled","curve","xaxis","categories","tooltip","format","series","Chart","options2","id","plotOptions","bar","horizontal","series2","Donut","options4","series4","radialBar","hollow","ApexChartsBasic","sparkline","markers","ApexChartsSparklines","ApexCharts","_ref","match","AppHeader","AppSidebar","Route","path","url","ChartsChartJs","AppFooter","myArray","_this$props","enablePageTitleSubheading","enablePageTitleIcon","cx","connect","ThemeOptions","dispatch"],"sourceRoot":""}